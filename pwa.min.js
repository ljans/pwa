/*
 pwa.js ServiceWorker wrapper v1.6
 Licensed under the MIT license
 Copyright (c) 2020 Lukas Jans
 https://github.com/luniverse/pwa
*/
'use strict';PWA=class{constructor(b){this.config=b;self.addEventListener("install",a=>a.waitUntil(this.install()));self.addEventListener("activate",a=>a.waitUntil(this.activate()));self.addEventListener("fetch",a=>a.respondWith(this.fetch(a)))}async install(){self.skipWaiting();this.config.cachedFiles&&(await caches.open(this.config.cacheVersion)).addAll(this.config.cachedFiles)}async activate(){await clients.claim();for(const b of await caches.keys())b!=this.config.cacheVersion&&await caches.delete(b)}async fetch(b){let a=
{};a.url=new URL(b.request.url);a.GET=a.url.searchParams;a.POST=new URLSearchParams(await b.request.clone().text());var d=await caches.match(b.request);if(d)return d;if(this.config.requestHandlers)for(let e of this.config.requestHandlers)if(d=(a.url.origin+a.url.pathname).replace(self.registration.scope,""),a.params=e.pattern.exec(decodeURIComponent(d)))try{this.config.requestFilter&&(a=await this.config.requestFilter(a));let c=await e.process(a);this.config.responseFilter&&(c=await this.config.responseFilter(c));
return c}catch(c){return this.config.exceptionHandler?this.config.exceptionHandler(c):Response.error()}return fetch(b.request)}};