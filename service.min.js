/*!
 * service.js for ServiceWorkers v1.1
 * Licensed under the MIT license
 * Copyright (c) 2019 Lukas Jans
 * https://github.com/luniverse/service
 */
Service=class{constructor(e){this.config=e,self.addEventListener("install",e=>e.waitUntil(this.install())),self.addEventListener("activate",e=>e.waitUntil(this.activate())),self.addEventListener("fetch",e=>e.respondWith(this.fetch(e)))}async install(){self.skipWaiting(),(await caches.open(this.config.version)).addAll(this.config.cache)}async activate(){await clients.claim();for(const e of await caches.keys())e!=this.config.version&&await caches.delete(e)}async fetch(e){let t={};t.url=new URL(e.request.url),t.GET=t.url.searchParams,t.POST=new URLSearchParams(await e.request.clone().text());const a=await caches.match(e.request);if(a)return a;for(let e of this.config.handlers)if(t.params=e.pattern.exec(t.url.pathname),t.params){this.config.requestFilter&&(t=await this.config.requestFilter(t));let a=await e.process(t);return this.config.responseFilter&&(a=await this.config.responseFilter(a)),a}return fetch(e.request)}};