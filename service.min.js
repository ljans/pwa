/*!
 * service.js for ServiceWorkers v1.0
 * Licensed under the MIT license
 * Copyright (c) 2019 Lukas Jans
 * https://github.com/luniverse/service
 */
Service=class{constructor(e){this.config=e,self.addEventListener("install",e=>this.install(e)),self.addEventListener("activate",e=>this.activate(e)),self.addEventListener("fetch",e=>this.fetch(e))}install(e){self.skipWaiting(),e.waitUntil(caches.open(this.config.version).then(e=>e.addAll(this.config.cache)))}activate(e){e.waitUntil((async()=>{await clients.claim();for(const e of await caches.keys())e!=this.config.version&&await caches.delete(e)})())}fetch(e){e.respondWith((async()=>{let t={};t.url=new URL(e.request.url),t.GET=t.url.searchParams,t.POST=new URLSearchParams(await e.request.clone().text());const i=await caches.match(e.request);if(i)return i;for(let e of this.config.handlers)if(t.params=e.pattern.exec(t.url.pathname),t.params){this.config.requestFilter&&(t=await this.config.requestFilter(t));let i=await e.process(t);return this.config.responseFilter&&(i=await this.config.responseFilter(i)),i}return fetch(e.request)})())}};